{
    "subject": "[Lab 10] Q2: Evaluating Names",
    "content": "<a href=\"https://cs61a.org/lab/lab10//#q2\">Q2: Evaluating Names</a>\n\n<p> Please post all questions you have below concerning Q2: Evaluating Names in the follow-ups.\n\n</p><p> If you are stuck on this question, feel free to read through the follow-up responses to see if you can draw any ideas from them.\n</p>",
    "threads": [
        {
            "question": "Which .py file are we writing in?",
            "follow-ups": [
                {
                    "feedback": "`expr.py`"
                }
            ]
        },
        {
            "question": "somehow I'm getting an extra None back when I raise an exception. I can't figure out what I'm doing wrong.                >>> try:     ...     print(Name('c').eval(env))     ... except NameError:     ...     print('Exception raised!')     Exception raised!     None          # Error: expected     #     Exception raised!     # but got     #     Exception raised!     #     None  Can anybody give me some hints, please?",
            "follow-ups": [
                {
                    "feedback": "Perhaps you're printing an additional None in your implementation? Or you might not be raising the exception properly - make sure you are returning the looked up name instead of printing it"
                }
            ]
        },
        {
            "question": "I keep getting the following error:  'dict' object has no attribute 'string'  What is going wrong?",
            "follow-ups": [
                {
                    "feedback": "You are probably trying to access an attribute named \"string\" from env. Remember that env is just a dictionary. The following from the problem description reveals from where you should be accessing the \"string\" attribute: \"The first type of PyCombinator expression that we want to evaluate are names. In our program, a name is an instance of the `Name` class. Each instance has a `string` attribute which is the name of the variable -- e.g. `\"x\"`.\" Remember that in problem 2 the method you are trying to implement is within `Name`!"
                }
            ]
        }
    ]
}