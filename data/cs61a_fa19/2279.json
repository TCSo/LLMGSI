{
    "subject": "[Lab 13] Q2: Split Accounts",
    "content": "<a href=\"https://cs61a.org/lab/lab13//#q2\">Q2: Split Accounts</a>\n\n<p> Please post all questions you have below concerning Q2: Split Accounts in the follow-ups.\n\n</p><p> If you are stuck on this question, feel free to read through the follow-up responses to see if you can draw any ideas from them.\n</p>",
    "threads": [
        {
            "question": "I'm having trouble figuring out a way to insert a row for each existing row. For example, is there an efficient way in inserting a checking account for each existing account in the table?",
            "follow-ups": [
                {
                    "feedback": "As the hint says, you can try to create a new table then insert it to the 'accounts' table."
                }
            ]
        },
        {
            "question": "How can I concatenate strings in SQL? I'm trying to concatenate the name with \"'s Checking account.\"",
            "follow-ups": [
                {
                    "feedback": "||"
                }
            ]
        },
        {
            "question": "Is there a way to clear a table. That is not drop it, but remove all columns?",
            "follow-ups": [
                {
                    "feedback": "DELETE FROM table. or do you want to remove the column names too?"
                },
                {
                    "feedback": "If you wanted to remove all the columns from a table, you might as well drop the table and create a new one, but I suspect you are asking about removing the rows, which would mean you should follow Akshit’s answer."
                }
            ]
        },
        {
            "question": "Could you please explain why my result is wrong?![](/redirect/s3?bucket=uploads&prefix=attach%2Fjziyku5gomy7aq%2Fjzqdjae0xob5cx%2Fk3fh6r5hla8n%2Flabsssssssssssssssss.png)",
            "follow-ups": [
                {
                    "feedback": "Never Mind, I figure out. Just case sensitive"
                }
            ]
        },
        {
            "question": "Does anyone know why I didn't have to order the final result. My approach was to create a helper table that has the names changed to name's checking account and then insert that into an original table. I expected the result to be something like:  Alyssa P Hacker's Savings account|510.0  # Ben Bitdiddle's Savings account|1020.0  # Cy D Fect's Savings account|1173.0  # Eben Scrooge's Savings account|4998.0  # Louis Reasoner's Savings account|3978.0  # Robert Cratchet's Savings account|612.0  Alyssa P Hacker's Checkings account|510.0  # Ben Bitdiddle's Checkings account|1020.0  # Cy D Fect's Checkings account|1173.0  # Eben Scrooge's Checkings account|4998.0  # Louis Reasoner's Chckings account|3978.0  # Robert Cratchet's Checkings account|612.0  But it ordered them for me. Does anyone know why?",
            "follow-ups": [
                {
                    "feedback": "If you look at the code inside split-accounts.py in the tests folder, you can see that they order the table by name before comparing the table you have with the correct table. The code they use is SELECT * FROM split_account_results order by name; In general, you don't really have to worry about the order of your rows"
                }
            ]
        },
        {
            "question": "Is the 'values' keyword required when inserting? I'm confused how to actually add the temporary table to the original. Also do you need select statements when accessing temporary tables?",
            "follow-ups": [
                {
                    "feedback": "You could insert rows in from another table using `INSERT INTO [dest_table] SELECT [columns] FROM [src_table]`. That `SELECT` statement can be modified how you wish."
                },
                {
                    "feedback": "When creating the temporary table, do we use the 'create table' statement or 'with'?"
                },
                {
                    "feedback": "I used the `CREATE TEMPORARY TABLE [table_name]` syntax. I don’t know if this was exactly what they meant since it wasn’t really covered in lecture, but it worked for me. Temporary tables are automatically dropped and don’t show up when you list tables, so they are meant to be… well, temporary."
                },
                {
                    "feedback": "Ok so I got it working by creating two separate tables (along with two inserts) with the 'create table' syntax. Would using temporary table allow you to do it more concisely? Is there a way to embed it in one line?"
                },
                {
                    "feedback": "Remember that you can also use the `UNION` keyword to create a longer table. For example, `CREATE TEMPORARY TABLE temp AS SELECT * FROM accounts UNION SELECT * FROM accounts` would create a table `temp` that had the entries of `accounts` twice. See if you can modify this so you only need one temporary table."
                }
            ]
        }
    ]
}